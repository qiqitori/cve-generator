(function generate_japanese() {
	var tl = {
		"generic_vulnerability": "脆弱性",
		"generic_vulnerabilities": "複数の脆弱性",
		"memory_leak": "メモリリーク",
		"unchecked_input": "入力の検証漏れ",
		"wrong_processing": "誤処理",
		"weak_encryption": "脆弱な暗号化",

		"crafted_packet": "巧妙に細工されたパケット",
		"crafted_file": "巧妙に細工されたファイル",
		"crafted_audio_file": "巧妙に細工された音声ファイル",
		"crafted_video_file": "巧妙に細工された動画ファイル",
		"crafted_image_file": "巧妙に細工された画像ファイル",

		"buffer_overflow": "バッファーオーバーフロー",
		"stack_based_buffer_overflow": "スタックベースのバッファーオーバーフロー",
		"stack_overflow": "スタックオーバーフロー",
		"integer_overflow": "整数オーバーフロー",

		"use_after_free": "開放後の再使用",
		"double_free": "二十開放",

		"dead_lock": "デッドロック",
		"race_condition": "競合状態",

		"code_injection": "コードインジェクション", // またはコード注入
		"sql_injection": "SQLインジェクション",
		"xss_vulnerability": "XSS脆弱性",

		"segmentation_fault": "セグメンテーション違反",
		"division_by_zero": "ゼロ除算エラー",
		"null_pointer_dereference": "NULLポインターの参照",
		"illegal_instruction": "不正命令",
		"memory_consumption": "メモリの消費",
		"file_handle_consumption": "ファイルハンドルの消費",
		"infinite_loop": "無限ループ",
		"assertion_failure": "アサーション違反", // または表明違反

		"remote": "リモートの",
		"local": "ローカルの",

		"unauthenticated": "非認証の",
		"authenticated": "認証されている",

		"dos": "サービス妨害",
		"exec": "任意のコードの実行",
		"read": "読み取り",
		"write": "書き込み・改ざん",
		"unspecified": "不特定な影響"
	}

	function copy_placeholders_to_values() { // DEBUG
		$("input[type=text]").each(function(i, v) {
			var placeholder = $(v).attr("placeholder");
			if (placeholder) {
				$(v).val(placeholder);
			}
		});
	}

	function oyobi(i, length) {
		if (i < length-1) {
			return "および";
		} else {
			return "";
		}
	}

	$("#generate_button").click(function() {
//		var language = $("#language").val();
//		if (language != "japanese") return;

		if (!check_input()) return;

		var result;

		function software_name_info() {
			return $("#software_name").val() + "の";
		}

		function version_info() {
			var version_info = "";
			var versions = $("#affected_versions").val().split(", ");
			versions.forEach(function(v, i, a) {
				if (v.indexOf("-") != -1) {
					var from_to = v.split("-");
					if (from_to[0] == "") {
						version_info += from_to[1] + "以下";
					} else if (from_to[1] == "") {
						version_info += from_to[0] + "以上"; 
					} else if (from_to[0] && from_to[1]) {
						version_info += from_to[0] + "～" + from_to[1];
					} else {
						throw "version_info";
					}
				} else {
					version_info += v;
				}
				version_info += oyobi(i, a.length);
			});
			version_info += "のバージョンに、";
			return version_info;
		}

		function file_function_info() {
			var file_function_info = "";
			var file_function_names_val = $("#file_function_names").val();
			if (!file_function_names_val) {
				return;
			}
			var file_functions = file_function_names_val.split(", ");
			file_functions.forEach(function(v, i, a) {
				file_function = v.split(": ");
				file_function_info += file_function[0] + "の";
				if (file_function[1].indexOf(" ") == -1) {
					file_function_info += file_function[1] + "関数";
				} else {
					functions = file_function[1].split(" ").forEach(function(v, i, a) {
						file_function_info += v;
						file_function_info += oyobi(i, a.length);
					});
					file_function_info += "関数";
				}
				file_function_info += oyobi(i, a.length);
			});
			file_function_info += "に、";
			return file_function_info;
		}

		function cause_info() {
			return tl[$("#cause option:checked").val()];
		}

		function attacker_type_info() {
			var attacker_type_info = "";
			var unauthenticated = $("#unauthenticated option:checked").val();
			var attacker_type = $("#attacker_type option:checked").val();
			if (unauthenticated != "na") {
				attacker_type_info += tl[unauthenticated];
			}
			if (attacker_type != "na") {
				attacker_type_info += tl[attacker_type];
			}
			attacker_type_info += "攻撃者が"
			return attacker_type_info;
		}

		function impact_info() {
			var impact_info = "";
			var privilege_info = "";
			var $impact = $("#impact option:checked");
			$impact.each(function(i, v) {
				var val = $(v).val();
				if (val == "exec") {
					privilege_escalation = $("#privilege_escalation").prop("checked");
					if (privilege_escalation) {
						impact_info += "権限昇格に伴って";
					}
				}
				impact_info += tl[val];
				if (val == "dos") {
					var dos_tech = $("#dos_tech option:checked").val();
					impact_info += "(" + tl[dos_tech] + ")";
				}
				impact_info += oyobi(i, $impact.length);
			});
			impact_info += "を起こすことができる"
			return impact_info;
		}

		function tech_info() {
			var tech_info = "";
			var using = $("#using option:checked").val();
			if (using) {
				tech_info += tl[using];
				tech_info += "を用いて";
			}
			var exploiting = $("#exploiting option:checked").val();
			if (exploiting) {
				tech_info += tl[exploiting];
				tech_info += "を起こして、";
			}
			return tech_info;
			return tech_info;
		}

		function related_cves_info() {
			var not_to_be_confused_with = $("#not_to_be_confused_with").val();
			if (not_to_be_confused_with) {
				return (not_to_be_confused_with + "とは別の脆弱性です。");
			} else {
				return "";
			}
		}

		function fixes_improper_fix_info() {
			var fixes_improper_fix = $("#fixes_improper_fix").val();
			if (fixes_improper_fix) {
				return "本脆弱性は" + fixes_improper_fix + "の不十分な対応により生じている脆弱性です。";
			} else {
				return "";
			}
		}

		function build_description() {
			var not_public = $("#not_public").prop("checked");
			if (not_public) {
				return "本脆弱性の詳細はまだ公開されていません。"
			} else {
				var result = software_name_info() + file_function_info() + version_info() + attacker_type_info() + tech_info() + impact_info() + "脆弱性が存在します。";
				result += related_cves_info() || "";
				result += fixes_improper_fix_info() || "";
				return result;
			}
		}

		$("#result_ja").text(build_description());
	});

	if (DEBUG) {
		copy_placeholders_to_values();
	}
})();